#!/bin/bash

printInfo() {
  green=`tput setaf 2`
  reset=`tput sgr0`
  echo "${green}[INFO]: ${1} ${reset}"
}

printWarning() {
  yellow=`tput setaf 3`
  reset=`tput sgr0`
  echo "${yellow}[WARNING]: ${1} ${reset}"
}

printError() {
  red=`tput setaf 1`
  reset=`tput sgr0`
  echo "${red}[ERROR]: ${1} ${reset}"
}

# projectExists
#
# $1 = project_name
#
projectExists() {

  oc get project $1 > /dev/null 2>&1
  OUT=$?
  if [ ${OUT} -ne 0 ]; then
    printInfo "Project $1 is not present"
    false
  else
    true
  fi
}


# oc_wait_for 
#
# $1 = [pod|node]
# $2 = app-name
# $3 = [app|name|role] - defaults to app
# $4 = namespace - defailts to ${OCP_NAMESPACE}
#
# EG
#    oc_wait_for pod rook-ceph-mon
#
oc_wait_for ()
{
    TYPE=${3:-app}
    NAMESPACE=${4:-$OCP_NAMESPACE}

    printInfo "Waiting for the ${1}s tagged ${2} = ready"
    oc wait --for condition=ready ${1} -l ${TYPE}=${2} -n ${NAMESPACE} --timeout=600s
}


# oc_login
#
# Login to our Openshift instance as an admin user
#
oc_login ()
{
    oc login -u ${OCP_USER} -p ${OCP_PASS} ${OCP_ENDPOINT} --insecure-skip-tls-verify=false
    printInfo "Login to OpenShift at ${OCP_ENDPOINT}"
    printInfo "Console access at https://console-openshift-console.apps.${OCP_DOMAIN}/"
}

